ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_litter)) +
geom_point(size = 1.5, position = position_dodge(width = 0.75)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
View(Plug)
#load data
data <- read.csv("2025_Exp_log.csv")
Lost_litter <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="") %>%
filter(Lost.Litter == 'checked')
Plug <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="")
View(data)
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_litter)) +
geom_point(size = 1.5, position = position_dodge(width = 0.75)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
as_factor(Lost_litter)
Plug$Lost.Litter <- factor(Plug$Lost.Litter, levels = c("no", "yes"))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
View(Plug)
View(Plug)
#litter viability
ggplot(Lost_litter, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Group_final)) +
geom_point(size = 1.5, position = position_dodge(width = 0.75)) +
scale_color_manual(values = c("cornflowerblue", "red", "grey")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
Plug <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="")
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
#load data
data <- read.csv("2025_Exp_log.csv")
Plug$Lost.Litter <- factor(Plug$Lost.Litter, levels = c("no", "yes"))
Lost_litter <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="") %>%
filter(Lost.Litter == 'checked')
Plug <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="")
#litter viability
ggplot(Lost_litter, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Group_final)) +
geom_point(size = 1.5, position = position_dodge(width = 0.75)) +
scale_color_manual(values = c("cornflowerblue", "red", "grey")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost_Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost.Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost.Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "Lost Litter") +
theme(axis.text.x = element_text(size = 10))
ggplot(Plug, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Lost.Litter)) +
geom_point(size = 1.5, position = position_jitter(width = 0.3, height = 0.3)) +
scale_color_manual(values = c("cornflowerblue", "red")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "Dam and Sire Ages") +
theme(axis.text.x = element_text(size = 10))
ggplot(Lost_litter, aes(x = Dam.Age.wk, y = Sire.Age.wk, color = Group_final)) +
geom_point(size = 1.5, position = position_dodge(width = 0.75)) +
scale_color_manual(values = c("cornflowerblue", "red", "grey")) +
theme_cowplot() +
xlab("Dam age (wk)") +
ylab("Sire age (wk)") +
labs(title = "") +
theme(axis.text.x = element_text(size = 10))
Lost_litter <- data %>%
filter(!is.na(DOP) & DOP != "") %>%
filter(!is.na(Group_final) & Group_final !="") %>%
filter(!if.na(Lost.Litter) & Lost.Litter !="")
View(Lost_litter)
View(data)
View(Plug)
View(Lost_litter)
View(Lost_litter)
View(Plug)
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "24.weight.loss"] <- "X24_weight_loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
# Convert categorical and response variables
data$Lost_Litter <- ifelse(data$Lost_Litter == "Yes", 1, 0)
data$group_final <- as.factor(data$Group_final)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "X24_weight_loss")])
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "24.weight.loss"] <- "X24_weight_loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
# Convert categorical and response variables
data$Lost_Litter <- ifelse(data$Lost_Litter == "Yes", 1, 0)
data$group_final <- as.factor(data$Group_final)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "X24_weight_loss")])
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "X24_weight_loss")])
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "24.weight.loss")])
View(data)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24.weight.loss")])
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "24.weight.loss"] <- "X24_weight_loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
# Convert categorical and response variables
data$Lost_Litter <- ifelse(data$Lost_Litter == "Yes", 1, 0)
data$group_final <- as.factor(data$Group_final)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24.weight.loss")])
# Rename columns for easier use
colnames(data)[colnames(data) == "24.weight.loss"] <- "X24_weight_loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
View(data)
# Rename columns for easier use
colnames(data)[colnames(data) == "24.weight.loss"] <- "X24_weight_loss"
# Rename columns for easier use
colnames(data)[colnames(data) == "X24.weight.loss"] <- "X24_weight_loss"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24.weight.loss")])
# Rename columns for easier use
colnames(data)[colnames(data) == "X24.weight.loss"] <- "24h_Loss"
View(data)
# Rename columns for easier use
colnames(data)[colnames(data) == "X24_weight_loss"] <- "24h_Loss"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_loss")])
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "Group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_loss")])
data$group_final <- as.factor(data$Group_final)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "Group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_loss")])
# Rename columns for easier use
colnames(data)[colnames(data) == "24h_loss"] <- "X24_weight_loss"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "X24_weight_loss")])
grep("Lost|group|Sire|Dam|E0.5|24", colnames(data), value = TRUE)
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire.Age.wk", "Dam.Age.wk", "E0.5", "24h_Loss")])
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(model_data)
View(model_data)
model_data$group_final <- as.factor(model_data$group_final)
model3 <- lm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk + E0.5, data = model_data)
# Compare them
AIC(model1, model2, model3)
#fit models
model1 <- lm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + 24h_Loss, data = model_data)
model1 <- lm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + 24h_Loss, data = model_data)
model1 <- lm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss`, data = model_data)
model2 <- lm(Lost_Litter ~ group_final + E0.5 + `24h_Loss`, data = model_data)
model3 <- lm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk + E0.5, data = model_data)
# Compare them
AIC(model1, model2, model3)
# Fit model
logit1 <- glm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss`,
data = model_data, family = binomial)
# Simpler alternatives
logit2 <- glm(Lost_Litter ~ group_final + E0.5 + `24h_Loss`, data = model_data, family = binomial)
logit3 <- glm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk + E0.5, data = model_data, family = binomial)
logit4 <- glm(Lost_Litter ~ group_final, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4)
# Chunk 1
#load packages
library(ggplot2)
library(tidyverse)
library(magrittr)
library(dplyr)
library(cowplot)
# Chunk 2
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
# Convert categorical and response variables
model_data$Lost_Litter <- ifelse(model_data$Lost_Litter == "Yes", 1, 0)
# Chunk 1
#load packages
library(ggplot2)
library(tidyverse)
library(magrittr)
library(dplyr)
library(cowplot)
# Chunk 2
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(data)
#load data
data <- read.csv("2025_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "X24.weight.loss"] <- "24h_Loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "Group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
# Convert categorical and response variables
model_data$Lost_Litter <- ifelse(model_data$Lost_Litter == "Yes", 1, 0)
model_data$group_final <- as.factor(model_data$group_final)
# Fit model
logit1 <- glm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss`,
data = model_data, family = binomial)
colnames(data)[colnames(data) == "Group_final"] <- "group_final"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
# Convert categorical and response variables
model_data$Lost_Litter <- ifelse(model_data$Lost_Litter == "Yes", 1, 0)
# Fit model
logit1 <- glm(Lost_Litter ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss`,
data = model_data, family = binomial)
# Simpler alternatives
logit2 <- glm(Lost_Litter ~ group_final + E0.5 + `24h_Loss`, data = model_data, family = binomial)
logit3 <- glm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk + E0.5, data = model_data, family = binomial)
logit4 <- glm(Lost_Litter ~ group_final, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4)
logit5 <- glm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk + `24h_Loss`, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
logit5 <- glm(Lost_Litter ~ Sire_Age_wk + Dam_Age_wk, data = model_data, family = binomial)
logit5 <- glm(Lost_Litter ~ `24h_Loss` + Dam_Age_wk, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
logit5 <- glm(Lost_Litter ~ E0.5 + Dam_Age_wk, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
logit5 <- glm(Lost_Litter ~ group_final + Dam_Age_wk, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
logit5 <- glm(Lost_Litter ~ group_final + Dam_Age_wk, E0.5, data = model_data, family = binomial)
logit5 <- glm(Lost_Litter ~ group_final + Dam_Age_wk + E0.5, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
logit5 <- glm(Lost_Litter ~ group_final + Dam_Age_wk, data = model_data, family = binomial)
#compare them
AIC(logit1, logit2, logit3, logit4, logit5)
#Logit 2 best fit (df=5, AIC=35.6)
summary(logit2)
setwd("/Volumes/Hayes Lab/Data/MIA_MatSerum/MIA_Litter_Viability")
data24 <- read.csv("2024_Exp_log.csv")
View(data24)
View(data)
colnames(data24)[colnames(data24) == "X24.weight.loss"] <- "24h_Loss"
colnames(data24)[colnames(data24) == "Lost.Litter"] <- "Lost_Litter"
colnames(data24)[colnames(data24) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data24)[colnames(data24) == "Dam.Age.wk"] <- "Dam_Age_wk"
colnames(data24)[colnames(data24) == "Group_final"] <- "group_final"
View(data24)
model_data24 <- na.omit(data[, c("DOB", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(model_data24)
View(data)
View(data24)
View(model_data)
model_data24 <- na.omit(data[, c("DOB", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(model_data24)
# Rename columns for easier use
colnames(data)[colnames(data) == "X24.weight.loss"] <- "24h_Loss"
model_data24 <- na.omit(data[, c("DOB", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
data24 <- read.csv("2024_Exp_log.csv")
colnames(data24)[colnames(data24) == "X24.weight.loss"] <- "24h_Loss"
colnames(data24)[colnames(data24) == "Lost.Litter"] <- "Lost_Litter"
colnames(data24)[colnames(data24) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data24)[colnames(data24) == "Dam.Age.wk"] <- "Dam_Age_wk"
colnames(data24)[colnames(data24) == "Group_final"] <- "group_final"
model_data24 <- na.omit(data[, c("DOB", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(model_data24)
View(data24)
model_data24 <- na.omit(data[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
View(model_data24)
model_data24 <- na.omit(data[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB")])
View(model_data24)
View(model_data)
View(data24)
data24 <- read.csv("2024_Exp_log.csv")
# Rename columns for easier use
colnames(data)[colnames(data) == "X24.weight.loss"] <- "24h_Loss"
colnames(data)[colnames(data) == "Lost.Litter"] <- "Lost_Litter"
colnames(data)[colnames(data) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data)[colnames(data) == "Dam.Age.wk"] <- "Dam_Age_wk"
colnames(data)[colnames(data) == "Group_final"] <- "group_final"
colnames(data24)[colnames(data24) == "X24.weight.loss"] <- "24h_Loss"
colnames(data24)[colnames(data24) == "Sire.Age.wk"] <- "Sire_Age_wk"
colnames(data24)[colnames(data24) == "Dam.Age.wk"] <- "Dam_Age_wk"
colnames(data24)[colnames(data24) == "Group_final"] <- "group_final"
# Remove rows with missing values in model-relevant columns
model_data <- na.omit(data[, c("Lost_Litter", "group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss")])
model_data24 <- na.omit(data[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB")])
View(model_data24)
as.factor(DOB)
as.factor("DOB", data = data24)
data24$DOB <- as.factor(data24$DOB)
model_data24 <- na.omit(data[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB")])
View(model_data24)
View(data)
View(data24)
View(data24)
model_data24 <- na.omit(data24[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB")])
View(model_data24)
model_data24 <- na.omit(data24[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB", "PIC")])
View(model_data24)
model_data24 <- na.omit(data24[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB", "PIC", "Vendor")])
View(model_data24)
model_data24 <- na.omit(data24[, c("group_final", "Sire_Age_wk", "Dam_Age_wk", "E0.5", "24h_Loss", "DOB", "PIC", "Vendor", "MatIL6")])
View(model_data24)
View(model_data)
View(model_data24)
# Fit 2024 model
logit241 <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss`, PIC, Vendor, MatIL6,
data = model_data, family = binomial)
# Fit 2024 model
logit241 <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss` + PIC + Vendor + MatIL6,
data = model_data, family = binomial)
table(model_data$DOB)
str(model_data$DOB)
# Fit 2024 model
logit241 <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss` + PIC + Vendor + MatIL6,
data = model_data24, family = binomial)
View(logit241)
# Fit 2024 model
all24_logit <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss` + PIC + Vendor + MatIL6,
data = model_data24, family = binomial)
library(car)
vif(full_model)
# Simpler alternatives
logit242 <- glm(DOB ~ Dam_Age_wk + E0.5 + `24h_Loss` + PIC, data = model_data24, family = binomial)
View(logit241)
logit243 <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + PIC, data = model_data24, family = binomial)
View(all24_logit)
library(car)
vif(all24_logit)
#compare them
best_model24 <- step(all24_logit, direction = "both")
View(best_model24)
summary(best_model24)
View(model_data24)
# Fit 2024 model
all24_logit <- glm(DOB ~ group_final + Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss` + PIC
+ Vendor + MatIL6, data = model_data24, family = binomial)
#find best model using AIC (akaike information criterion)
best_model24 <- step(all24_logit, direction = "both")
View(best_model24)
summary(best_model24)
# Fit 2024 model
all24_logit <- glm(DOB ~ Sire_Age_wk + Dam_Age_wk + E0.5 + `24h_Loss` + PIC
+ Vendor + MatIL6, data = model_data24, family = binomial)
#find best model using AIC (akaike information criterion)
best_model24 <- step(all24_logit, direction = "both")
# Fit 2024 model
all24_logit <- glm(DOB ~ Dam_Age_wk + E0.5 + `24h_Loss` + PIC
+ Vendor + MatIL6, data = model_data24, family = binomial)
#find best model using AIC (akaike information criterion)
best_model24 <- step(all24_logit, direction = "both")
#best
glm(formula = DOB ~ Vendor + MatIL6, family = binomial, data = model_data24)
# Fit 2024 model
all24_logit <- glm(DOB ~ E0.5 + `24h_Loss` + PIC + Vendor + MatIL6,
data = model_data24, family = binomial)
#find best model using AIC (akaike information criterion)
best_model24 <- step(all24_logit, direction = "both")
#best
summary(best_model24)
# Fit 2024 model
all24_logit <- glm(DOB ~ Dam_Age_wk + Sire_Age_wk + E0.5 + `24h_Loss` + PIC + Vendor + MatIL6,
data = model_data24, family = binomial)
#find best model using AIC (akaike information criterion)
best_model24 <- step(all24_logit, direction = "both")
#best
summary(best_model24)
library(pROC)
roc_obj <- roc(model_data24$DOB, preds)
plot(roc_obj)
auc(roc_obj)
library(pROC)
install.packages("pROC")
library(pROC)
detach("package:pROC", unload = TRUE)
library(pROC)
roc_obj <- roc(model_data24$DOB, preds)
plot(roc_obj)
auc(roc_obj)
roc_obj <- roc(best_model24$DOB, preds)
preds <- predict(best_model24, type = "response")
roc_obj <- roc(best_model24$DOB, preds)
roc_obj <- roc(model_data24$DOB, preds)
plot(roc_obj)
auc(roc_obj)
roc_obj <- roc(model_data24$DOB, preds)
auc(roc_obj)
install.packages("devtools")
devtools::install_github("tidymodels/learntidymodels")
learnr::run_tutorial("pca_recipes", package = "learntidymodels")
library(cowplot)
setwd("/Volumes/Hayes Lab/Data/DNA_Methylation_Project")
data <- read.csv("250708_samples.csv0")
data <- read.csv("250708_samples.csv")
summary data
summary(data)
View(best_model24)
View(data)
data <- read.csv("250708_samples.csv")
table(data$Sac.Age)
table(data$Sac.Age$Group_final)
table(data$Sac.Age, data$Group_final)
table(data$Sac.Age, data$Group_final, data$Sex)
table(data$Sac.Age, data$Group_final, data$Sex)
data %>% count(Sac.Age, Group_final, Sex)
data |> count(Sac.Age, Group_final, Sex)
library(dyplr)
library(dplyr
library(dplyr)
library(dplyr)
library(tidyverse)
library(cowplot)
library(dplyr)
library(dplyr)
View(data)
data |> count(Sac.Age, Group_final, Sex)
setwd("~/GitHub/SydneyCamfield")
setwd("~/GitHub/SydneyCamfield")
